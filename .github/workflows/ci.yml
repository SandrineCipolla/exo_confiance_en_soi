name: CI/CD Pipeline

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master]

jobs:
  # ==========================================
  # JOB 1 : BACKEND - Build + tests (via Docker)
  # ==========================================
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: m2-confiance-en-soi-docker/back

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Build Backend Docker Image (for tests)
        run: |
          docker build -t confiance-en-soi-back:test -f Dockerfile .
          echo "✅ Backend test image built successfully"

      - name: 🐳 Run Backend Tests inside Docker
        run: |
          mkdir -p m2-confiance-en-soi-docker/back/coverage
          docker run --rm \
            -v ${{ github.workspace }}/m2-confiance-en-soi-docker/back/coverage:/usr/src/app/coverage \
            confiance-en-soi-back:test npm run coverage


      - name: 🐳 Copy coverage report from Docker container
        run:
          container_id=$(docker create confiance-en-soi-back:test)
            docker cp $container_id:/usr/src/app/coverage ./m2-confiance-en-soi-docker/back/coverage || echo "No coverage found"
            docker rm $container_id

      - name: 🕵️ List downloaded files
        run: |
          echo "Listing current directory:"
          ls -R .

      - name: 📈 Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: m2-confiance-en-soi-docker/back/coverage

      - name: 🎨 Check code formatting (Prettier)
        run: docker run --rm confiance-en-soi-back:test npm run format:check

      - name: 🔍 Check for lint errors (ESLint)
        run: docker run --rm confiance-en-soi-back:test npm run lint


  # ==========================================
  # JOB 2 : FRONTEND - React + Build
  # ==========================================
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: m2-confiance-en-soi-docker/front/frontend

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: m2-confiance-en-soi-docker/front/frontend/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎨 Check code formatting (Prettier)
        run: npm run format:check

      - name: 🔍 Check for lint errors (ESLint)
        run: npm run lint

      - name: 🏗️ Build frontend
        run: npm run build

      - name: 📊 Check build output
        run: |
          if [ -d "dist" ]; then
            echo "✅ Build successful - dist folder created"
            ls -la dist
          else
            echo "❌ Build failed - dist folder not found"
            exit 1
          fi

      - name: 🐳 Build Frontend Docker Image (for future deploy)
        run: |
          docker build -t confiance-en-soi-front:ci -f Dockerfile .
          echo "✅ Frontend Docker image built successfully"

  # ==========================================
  # JOB 3 : DEPLOY COVERAGE REPORT (GitHub Pages)
  # ==========================================
  deploy-coverage:
    name: Deploy Coverage Report (GitHub Pages)
    runs-on: ubuntu-latest
    needs: [backend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    permissions:
      contents: read
      pages: write
      id-token: write

    concurrency:
      group: 'coverage-pages'
      cancel-in-progress: true

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Pages
        uses: actions/configure-pages@v5

      - name: 📤 Upload coverage artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: m2-confiance-en-soi-docker/back/coverage

      - name: 🚀 Deploy coverage report to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # ==========================================
  # JOB 4: SUMMARY
  # ==========================================
  summary:
    name: CI/CD Summary
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: always()

    steps:
      - name: 📊 Display results
        run: |
          echo "=========================================="
          echo "   CI/CD PIPELINE COMPLETED"
          echo "=========================================="
          echo ""
          echo "📦 BACKEND CHECKS:"
          echo "  └─ Status: ${{ needs.backend.result }}"
          echo "     ├─ Docker build"
          echo "     ├─ Tests (Vitest)"
          echo "     ├─ Lint (ESLint)"
          echo "     └─ Format (Prettier)"
          echo ""
          echo "🎨 FRONTEND CHECKS:"
          echo "  └─ Status: ${{ needs.frontend.result }}"
          echo "     ├─ Build (Vite)"
          echo "     ├─ Lint + Prettier"
          echo "     └─ Docker build"
          echo ""
          echo "=========================================="
          if [[ "${{ needs.backend.result }}" == "success" && "${{ needs.frontend.result }}" == "success" ]]; then
            echo "✅ RESULT: All checks passed!"
            echo "=========================================="
            exit 0
          else
            echo "❌ RESULT: Some checks failed"
            echo "=========================================="
            exit 1
          fi